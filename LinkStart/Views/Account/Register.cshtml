@model LinkStart.Core.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";

}
<div class="text-center" style="padding:50px 0">
    <div class="logo">register</div>
    <!-- Main Form -->
    <div class="login-form-1">
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "text-left",id="login-form"}))
        {
            @Html.AntiForgeryToken()
            
                @Html.ValidationSummary("", new { @class = "text-warning" })

      
            <div class="main-login-form">
                <div class="login-group">
                    <div class="form-group">
                        @Html.LabelFor(m => m.FirstName, new { @class = "sr-only" })
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-info" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName, new { @class = "sr-only" })
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control",placeholder="Last Name" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-info" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "sr-only" })
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-info" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Username, new { @class = "sr-only" })
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "Username" })
                        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-info" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "sr-only" })
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-info" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "sr-only" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-info" })
                    </div>
                </div>
                        <button type="submit" class="login-button"><i class="fa fa-chevron-right"></i></button>
            </div>
             <div class="etc-login-form">
                        <p>already have an account? <a href="@Url.Action("Login","Account")">login here</a></p>
                    </div>
                }
            </div>
    <!-- end:Main Form -->
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
