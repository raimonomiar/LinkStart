@using Microsoft.AspNet.Identity
@model LinkStart.Core.ViewModels.UserViewModel
@{
    ViewBag.Title = "Home Page";
}
<div class="row">
    <div class="col-lg-4 col-md-5">
        <div class="card card-user">
            <div class="image">
                <img src="assets/img/background.jpg" alt="..." />
            </div>
            <div class="content">
                <div class="author">
                    <img class="avatar border-white" src="assets/img/faces/face-2.jpg" alt="..." />
                    <input type="hidden" value="@User.Identity.GetUserId()" id="Id" />
                    <h4 class="title" data-bind="text:userName">
                         <br />
                        <a href="#"><small data-bind="text:userName">@@</small></a>
                    </h4>
                </div>
                <p class="description text-center">
                    "I like the way you work it <br>
                    No diggity <br>
                    I wanna bag it up"
                </p>
            </div>
            <hr>
            <div class="text-center">
                <div class="row">
                    <div class="col-md-3 col-md-offset-1">
                        <h5>12<br /><small>Files</small></h5>
                    </div>
                    <div class="col-md-4">
                        <h5>2GB<br /><small>Used</small></h5>
                    </div>
                    <div class="col-md-3">
                        <h5>24,6$<br /><small>Spent</small></h5>
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="header">
                <h4 class="title">Team Members</h4>
            </div>
            <div class="content">
                <ul class="list-unstyled team-members">
                    <li>
                        <div class="row">
                            <div class="col-xs-3">
                                <div class="avatar">
                                    <img src="assets/img/faces/face-0.jpg" alt="Circle Image" class="img-circle img-no-padding img-responsive">
                                </div>
                            </div>
                            <div class="col-xs-6">
                                DJ Khaled
                                <br />
                                <span class="text-muted"><small>Offline</small></span>
                            </div>
                            <div class="col-xs-3 text-right">
                                <btn class="btn btn-sm btn-success btn-icon"><i class="fa fa-envelope"></i></btn>
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="row">
                            <div class="col-xs-3">
                                <div class="avatar">
                                    <img src="assets/img/faces/face-1.jpg" alt="Circle Image" class="img-circle img-no-padding img-responsive">
                                </div>
                            </div>
                            <div class="col-xs-6">
                                Creative Tim
                                <br />
                                <span class="text-success"><small>Available</small></span>
                            </div>
                            <div class="col-xs-3 text-right">
                                <btn class="btn btn-sm btn-success btn-icon"><i class="fa fa-envelope"></i></btn>
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="row">
                            <div class="col-xs-3">
                                <div class="avatar">
                                    <img src="assets/img/faces/face-3.jpg" alt="Circle Image" class="img-circle img-no-padding img-responsive">
                                </div>
                            </div>
                            <div class="col-xs-6">
                                Flume
                                <br />
                                <span class="text-danger"><small>Busy</small></span>
                            </div>
                            <div class="col-xs-3 text-right">
                                <btn class="btn btn-sm btn-success btn-icon"><i class="fa fa-envelope"></i></btn>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="col-lg-8 col-md-7">
        <div class="card">
            <div class="header">
                <h4 class="title">Edit Profile</h4>
            </div>
            <div class="content">
                <form data-bind="submit:updateUser">
                    <div class="row">

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Username</label>
                                @Html.TextBoxFor(x => x.UserName, new { @class = "form-control border-input", placeholder = "Username",data_bind="value:userName" })
                                @Html.ValidationMessageFor(x => x.UserName)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="exampleInputEmail1">Email address</label>
                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control border-input", placeholder = "Email",data_bind="value:email" })
                                @Html.ValidationMessageFor(x => x.Email)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>First Name</label>
                                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control border-input", placeholder = "First Name",data_bind="value:firstName" })
                                @Html.ValidationMessageFor(x => x.FirstName)

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Last Name</label>
                                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control border-input", placeholder = "LastName",data_bind="value:lastName" })
                                @Html.ValidationMessageFor(x => x.LastName)

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Phone Number</label>
                                @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control border-input", placeholder = "Phone Number",data_bind="value:phoneNumber" })
                                @Html.ValidationMessageFor(x => x.PhoneNumber)

                            </div>
                        </div>
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-info btn-fill btn-wd">Update Profile</button>
                    </div>
                    <div class="clearfix"></div>
                </form>
            </div>
        </div>
    </div>

</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    
    <script type="text/javascript">

    

        function UserViewModel() {

            var self = this;


            self.id = ko.observable();

            self.firstName = ko.observable();

            self.lastName = ko.observable();

            self.userName = ko.observable();

            self.email = ko.observable();

            self.phoneNumber = ko.observable();

            $.ajax({
                    url: "/api/user/" + $("#Id").val(),
                    method: "GET"
                })
                .done(function(data) {

                    self.id(data.Id);

                    self.firstName(data.FirstName);

                    self.lastName(data.LastName);

                    self.userName(data.UserName);

                    self.email(data.Email);

                    self.phoneNumber(data.PhoneNumber);
                });

            self.updateUser = function() {

                $.ajax({
                        url: "/api/user",
                        method: "PUT",
                        data: {
                            UserId: self.id(),
                            Email: self.email(),
                            FirstName: self.firstName(),
                            LastName: self.lastName(),
                            UserName: self.userName(),
                            PhoneNumber: self.phoneNumber
                        }

                    })
                    .done(function() {
                        bootbox.alert("User updated");
                    });
            }


        }
        ko.applyBindings(new UserViewModel());

    </script>
}